/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    //variable to store total number of possible path
    public int total = 0;

    public int pathSum(TreeNode root, int targetSum) {
        if(root == null){
            return 0;
        }
        Helper(root, targetSum, 0);

        pathSum(root.left, targetSum);
        pathSum(root.right, targetSum);

        return total;
    }

    //Helper Function
    private void Helper(TreeNode root, int targetSum, long current){
        if(root == null){
            return;
        }

        current += root.val;

        if(current == targetSum){
            total++;
        }

        Helper(root.left, targetSum, current);
        Helper(root.right, targetSum, current);
    }
}
