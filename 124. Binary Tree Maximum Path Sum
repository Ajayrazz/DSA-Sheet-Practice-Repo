/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    //variable to store the maximum sum value of the path
    public int max_sum = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        if(root == null){
            return 0;
        }
        
        pathSum(root);
        return max_sum;
    }

    //Function to find the maximum path sum value
    private int pathSum(TreeNode root){
        if(root == null){
            return 0;
        }

        int leftSum = Math.max(0, pathSum(root.left));
        int rightSum = Math.max(0, pathSum(root.right));

        max_sum = Math.max(max_sum, leftSum + rightSum + root.val);

        return Math.max(leftSum, rightSum) + root.val;
    }
}
